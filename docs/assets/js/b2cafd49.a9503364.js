"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[916],{1179:(e,i,n)=>{n.r(i),n.d(i,{assets:()=>a,contentTitle:()=>o,default:()=>h,frontMatter:()=>c,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"entities/verifiers","title":"Verifiers","description":"A Biscuit Verifier is a key component in the Biscuit token framework, used to validate and enforce additional constraints on a Biscuit token.","source":"@site/docs/entities/verifiers.mdx","sourceDirName":"entities","slug":"/entities/verifiers","permalink":"/otoroshi-biscuit-studio/docs/entities/verifiers","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2},"sidebar":"tutorialSidebar","previous":{"title":"KeyPairs","permalink":"/otoroshi-biscuit-studio/docs/entities/keypairs"},"next":{"title":"Attenuators","permalink":"/otoroshi-biscuit-studio/docs/entities/attenuators"}}');var r=n(4848),t=n(8453);n(9229);const c={sidebar_position:2},o="Verifiers",a={},d=[{value:"Overview",id:"overview",level:2},{value:"Key Features",id:"key-features",level:3},{value:"Common Use Cases",id:"common-use-cases",level:3},{value:"Example Configuration",id:"example-configuration",level:2},{value:"Explanation of Fields",id:"explanation-of-fields",level:3},{value:"Creating a Biscuit Verifier from Command Line",id:"creating-a-biscuit-verifier-from-command-line",level:2}];function l(e){const i={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",img:"img",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(i.header,{children:(0,r.jsx)(i.h1,{id:"verifiers",children:"Verifiers"})}),"\n",(0,r.jsx)(i.p,{children:"A Biscuit Verifier is a key component in the Biscuit token framework, used to validate and enforce additional constraints on a Biscuit token."}),"\n",(0,r.jsx)(i.p,{children:"While Biscuit tokens inherently carry embedded rules and checks, a verifier allows you to apply context-specific restrictions during token validation without modifying the token itself."}),"\n",(0,r.jsx)(i.p,{children:"Using a verifier means you don\u2019t need to modify or reissue tokens for every new constraint. Instead, constraints can be added at runtime when validating the token."}),"\n",(0,r.jsx)(i.p,{children:(0,r.jsx)(i.img,{src:n(6964).A+"",width:"2824",height:"1558"})}),"\n",(0,r.jsx)(i.p,{children:(0,r.jsx)(i.img,{src:n(5073).A+"",width:"2824",height:"1568"})}),"\n",(0,r.jsx)(i.h2,{id:"overview",children:"Overview"}),"\n",(0,r.jsx)(i.h3,{id:"key-features",children:"Key Features"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Dynamic Constraint Management"}),": Add new constraints at runtime without altering the original token."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Enhanced Security"}),": Enforce strict validation policies tailored to specific contexts."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Extensibility"}),": Easily integrate with various APIs and frameworks."]}),"\n"]}),"\n",(0,r.jsx)(i.h3,{id:"common-use-cases",children:"Common Use Cases"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsx)(i.li,{children:"Limiting token usage to specific timeframes."}),"\n",(0,r.jsx)(i.li,{children:"Restricting token access to particular resources."}),"\n",(0,r.jsx)(i.li,{children:"Enforcing domain-specific rules dynamically."}),"\n"]}),"\n",(0,r.jsx)(i.h2,{id:"example-configuration",children:"Example Configuration"}),"\n",(0,r.jsx)(i.p,{children:"The following JSON configuration defines a Biscuit Verifier with a time constraint:"}),"\n",(0,r.jsx)(i.pre,{children:(0,r.jsx)(i.code,{className:"language-json",children:'{\n  "enabled": true,\n  "id": "biscuit_verifier_6f5f20a5-2c65-4860-8ad1-7b6495ee03bf",\n  "keypair_ref": "biscuit_keypair_e42033bc-f181-485f-857d-576e4728f6f9",\n  "name": "Biscuit Verifier",\n  "description": "Biscuit Verifier",\n  "strict": true,\n  "tags": [],\n  "config": {\n    "checks": [\n      "check if time($date), $date <= 2024-12-30T19:00:10Z;"\n    ],\n    "facts": [],\n    "resources": [],\n    "rules": [],\n    "revocation_ids": []\n  },\n  "kind": "biscuit.extensions.cloud-apim.com/BiscuitVerifier"\n}\n'})}),"\n",(0,r.jsx)(i.h3,{id:"explanation-of-fields",children:"Explanation of Fields"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:(0,r.jsx)(i.code,{children:"enabled"})}),": Indicates if the verifier is active."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:(0,r.jsx)(i.code,{children:"id"})}),": Unique identifier for the verifier."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:(0,r.jsx)(i.code,{children:"keypair_ref"})}),": Reference to the cryptographic keypair used for token verification."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:(0,r.jsx)(i.code,{children:"name"})}),": Human-readable name for the verifier."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:(0,r.jsx)(i.code,{children:"description"})}),": Description of the verifier\u2019s purpose."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:(0,r.jsx)(i.code,{children:"strict"})}),": Enforces strict checking of constraints."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:(0,r.jsx)(i.code,{children:"tags"})}),": Metadata tags for organizing verifiers."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:(0,r.jsx)(i.code,{children:"config"})}),": Contains the specific rules, checks, facts, and other configurations applied by the verifier.","\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:(0,r.jsx)(i.code,{children:"checks"})}),": Constraints enforced during validation (e.g., time-based restrictions)."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:(0,r.jsx)(i.code,{children:"facts"})}),": Contextual facts provided to the verifier."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:(0,r.jsx)(i.code,{children:"resources"})}),": Specifies resources associated with the token."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:(0,r.jsx)(i.code,{children:"rules"})}),": Defines custom rules for validation."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:(0,r.jsx)(i.code,{children:"revocation_ids"})}),": List of IDs marking revoked tokens."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:(0,r.jsx)(i.code,{children:"kind"})}),": Specifies the resource type for integration with APIs."]}),"\n"]}),"\n",(0,r.jsx)(i.h2,{id:"creating-a-biscuit-verifier-from-command-line",children:"Creating a Biscuit Verifier from Command Line"}),"\n",(0,r.jsxs)(i.p,{children:["You can create a Biscuit Verifier using the Otoroshi API with the following ",(0,r.jsx)(i.code,{children:"curl"})," command:"]}),"\n",(0,r.jsx)(i.pre,{children:(0,r.jsx)(i.code,{className:"language-bash",children:'curl -X POST -H \'Content-Type: application/json\' \\\n  \'http://otoroshi-api.oto.tools:8080/apis/biscuit.extensions.cloud-apim.com/v1/biscuit-verifiers\' \\\n  -u admin-api-apikey-id:admin-api-apikey-secret \\\n  -d \'{\n    "enabled": true,\n    "id": "biscuit_verifier_6f5f20a5-2c65-4860-8ad1-7b6495ee03bf",\n    "keypair_ref": "biscuit_keypair_e42033bc-f181-485f-857d-576e4728f6f9",\n    "name": "Biscuit Verifier CURL",\n    "description": "A Biscuit Verifier created from Otoroshi API",\n    "strict": true,\n    "tags": [],\n    "config": {\n      "checks": [\n        "check if time($date), $date <= 2024-12-30T19:00:10Z;"\n      ],\n      "facts": [],\n      "resources": [],\n      "rules": [],\n      "revocation_ids": []\n    },\n    "kind": "biscuit.extensions.cloud-apim.com/BiscuitVerifier"\n  }\'\n'})})]})}function h(e={}){const{wrapper:i}={...(0,t.R)(),...e.components};return i?(0,r.jsx)(i,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},9229:(e,i,n)=>{n(6540),n(4848)},6964:(e,i,n)=>{n.d(i,{A:()=>s});const s=n.p+"assets/images/biscuit-verifier-creation-cfb3db4685a8f743cb39f7ec37190788.png"},5073:(e,i,n)=>{n.d(i,{A:()=>s});const s=n.p+"assets/images/biscuit-verifier-entity-config2-b7ef423e61c6a1e01f1f75838b2911dd.png"},8453:(e,i,n)=>{n.d(i,{R:()=>c,x:()=>o});var s=n(6540);const r={},t=s.createContext(r);function c(e){const i=s.useContext(t);return s.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function o(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:c(e.components),s.createElement(t.Provider,{value:i},e.children)}}}]);